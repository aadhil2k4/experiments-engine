"""add reward and prior variables

Revision ID: cef005a532a5
Revises: ac3411f604ea
Create Date: 2025-02-25 21:18:36.144713

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "cef005a532a5"
down_revision: Union[str, None] = "ac3411f604ea"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("arms", sa.Column("alpha", sa.Float(), nullable=True))
    op.add_column("arms", sa.Column("beta", sa.Float(), nullable=True))
    op.add_column("arms", sa.Column("mu", sa.Float(), nullable=True))
    op.add_column("arms", sa.Column("sigma", sa.Float(), nullable=True))
    op.add_column("arms", sa.Column("reward", sa.ARRAY(sa.Float()), nullable=True))
    op.alter_column("arms", "successes", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("arms", "failures", existing_type=sa.INTEGER(), nullable=True)
    op.drop_column("arms", "alpha_prior")
    op.drop_column("arms", "beta_prior")
    op.add_column("mabs", sa.Column("prior_type", sa.String(length=50), nullable=False))
    op.add_column(
        "mabs", sa.Column("reward_type", sa.String(length=50), nullable=False)
    )
    op.alter_column(
        "users", "hashed_api_key", existing_type=sa.VARCHAR(length=96), nullable=False
    )
    op.alter_column(
        "users",
        "api_key_first_characters",
        existing_type=sa.VARCHAR(length=5),
        nullable=True,
    )
    op.alter_column(
        "users",
        "api_key_updated_datetime_utc",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "api_key_updated_datetime_utc",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "users",
        "api_key_first_characters",
        existing_type=sa.VARCHAR(length=5),
        nullable=False,
    )
    op.alter_column(
        "users", "hashed_api_key", existing_type=sa.VARCHAR(length=96), nullable=True
    )
    op.drop_column("mabs", "reward_type")
    op.drop_column("mabs", "prior_type")
    op.add_column(
        "arms",
        sa.Column("beta_prior", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "arms",
        sa.Column("alpha_prior", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.alter_column("arms", "failures", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("arms", "successes", existing_type=sa.INTEGER(), nullable=False)
    op.drop_column("arms", "reward")
    op.drop_column("arms", "sigma")
    op.drop_column("arms", "mu")
    op.drop_column("arms", "beta")
    op.drop_column("arms", "alpha")
    # ### end Alembic commands ###
