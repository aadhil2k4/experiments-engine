"""added experiment base class

Revision ID: 9869caf8ff15
Revises: 779fe8bd88f0
Create Date: 2025-03-04 16:28:41.357006

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9869caf8ff15"
down_revision: Union[str, None] = "779fe8bd88f0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "experiments_base",
        sa.Column("experiment_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("exp_type", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("experiment_id"),
    )
    op.drop_constraint("mabs_user_id_fkey", "mabs", type_="foreignkey")
    op.create_foreign_key(
        "fk_mabs_experiments_base",
        "mabs",
        "experiments_base",
        ["experiment_id"],
        ["experiment_id"],
    )
    op.drop_column("mabs", "is_active")
    op.drop_column("mabs", "name")
    op.drop_column("mabs", "description")
    op.drop_column("mabs", "user_id")
    op.drop_constraint(
        "notifications_experiment_id_fkey", "notifications", type_="foreignkey"
    )
    op.create_foreign_key(
        "notifications_experiment_id_fkey",
        "notifications",
        "experiments_base",
        ["experiment_id"],
        ["experiment_id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "notifications_experiment_id_fkey", "notifications", type_="foreignkey"
    )
    op.create_foreign_key(
        "notifications_experiment_id_fkey",
        "notifications",
        "mabs",
        ["experiment_id"],
        ["experiment_id"],
    )
    op.add_column(
        "mabs", sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "mabs",
        sa.Column(
            "description", sa.VARCHAR(length=500), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "mabs",
        sa.Column("name", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    )
    op.add_column(
        "mabs",
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.drop_constraint("fk_mabs_experiments_base", "mabs", type_="foreignkey")
    op.create_foreign_key(
        "mabs_user_id_fkey", "mabs", "users", ["user_id"], ["user_id"]
    )
    op.drop_table("experiments_base")
    # ### end Alembic commands ###
